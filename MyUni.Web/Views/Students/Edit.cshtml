@section customcss
{
    @Styles.Render("~/bundles/datepickercss");
}

@model MyUni.Web.ViewModels.Student.StudentViewModel


<div class="col-sm-12">
    <div class="box box-info box-solid">
        <div class="box-header with-border">
            <h3 class="box-title">Edit</h3>
        </div><!-- /.box-header -->
        <div class="box-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="box-body">

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EnrolledDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @*@Html.EditorFor(model => model.EnrolledDate, new { htmlAttributes = new { @class = "form-control" } })*@
                                <div class="input-group input-append date" id="EnrolledDatePicker">
                                    <input type="text" class="form-control" name="EnrolledDate" data-val="required" data-val-required="Date is required" />
                                    <span class="input-group-addon add-on"><span class="glyphicon glyphicon-calendar"></span></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.EnrolledDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-warning">
                                    <i class="fa fa-save"></i>
                                    &nbsp;Save
                                </button>
                                <a href="@Url.Action("Index")" class="btn btn-default">
                                    <i class="fa fa-arrow-left"></i>
                                    &nbsp;Cancel
                                </a>
                            </div>
                        </div>

                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepickerjs")


    <script type="text/javascript">
        $(function () {
            $('#EnrolledDatePicker').datepicker({
                format: 'yyyy/mm/dd'
            }).on('changeDate show', function (e) {
                // Revalidate the date when user change it
                //$('form').formValidation('revalidateField', 'EnrolledDate');
                $('#EnrolledDate').valid();
            });;

            var datePicker = $('#EnrolledDatePicker').data('datepicker');
            datePicker.setDate(new Date("@Model.EnrolledDate.ToString("yyyy/MM/dd")"));
            datePicker.update();
            @*datePicker("setDate", new Date(@Model.EnrolledDate.Year, @Model.EnrolledDate.Month, @Model.EnrolledDate.Day));*@

        });
</script>
}
